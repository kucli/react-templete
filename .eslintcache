[{"E:\\tsLib\\commitlint.config.js":"1","E:\\tsLib\\static\\config\\env.js":"2","E:\\tsLib\\static\\config\\getHttpsConfig.js":"3","E:\\tsLib\\static\\config\\jest\\babelTransform.js":"4","E:\\tsLib\\static\\config\\jest\\cssTransform.js":"5","E:\\tsLib\\static\\config\\jest\\fileTransform.js":"6","E:\\tsLib\\static\\config\\modules.js":"7","E:\\tsLib\\static\\config\\my_config\\config_dev.js":"8","E:\\tsLib\\static\\config\\my_config\\config_prod.js":"9","E:\\tsLib\\static\\config\\paths.js":"10","E:\\tsLib\\static\\config\\webpack\\persistentCache\\createEnvironmentHash.js":"11","E:\\tsLib\\static\\config\\webpack.config.js":"12","E:\\tsLib\\static\\config\\webpackDevServer.config.js":"13","E:\\tsLib\\static\\jest.config.js":"14","E:\\tsLib\\static\\scripts\\build.js":"15","E:\\tsLib\\static\\scripts\\start.js":"16","E:\\tsLib\\static\\scripts\\test.js":"17","E:\\tsLib\\static\\src\\App.js":"18","E:\\tsLib\\static\\src\\assets\\js\\config.js":"19","E:\\tsLib\\static\\src\\component\\jest\\Pick1\\sum.ts":"20","E:\\tsLib\\static\\src\\component\\jest\\Pick1\\sun.test.ts":"21","E:\\tsLib\\static\\src\\component\\learnReact\\context\\useContext\\index.tsx":"22","E:\\tsLib\\static\\src\\component\\learnReact\\context\\useContext\\son1\\index.tsx":"23","E:\\tsLib\\static\\src\\index.js":"24","E:\\tsLib\\static\\src\\lib.d.ts":"25","E:\\tsLib\\static\\src\\Page\\Echart\\index.tsx":"26","E:\\tsLib\\static\\src\\Page\\FIleExport\\index.jsx":"27","E:\\tsLib\\static\\src\\Page\\Iframe\\index.tsx":"28","E:\\tsLib\\static\\src\\Page\\learnReact\\index.tsx":"29","E:\\tsLib\\static\\src\\Page\\learnReact\\page\\context\\context.js":"30","E:\\tsLib\\static\\src\\Page\\learnReact\\page\\context\\index.tsx":"31","E:\\tsLib\\static\\src\\Page\\RSA\\index.tsx":"32","E:\\tsLib\\static\\src\\Page\\Uploader\\index.jsx":"33","E:\\tsLib\\static\\src\\Page\\YuexiuAuth\\index.tsx":"34","E:\\tsLib\\static\\src\\util\\api\\wechatAuth.js":"35","E:\\tsLib\\static\\src\\util\\deepCopy.js":"36","E:\\tsLib\\static\\src\\util\\histroy.js":"37","E:\\tsLib\\static\\src\\util\\instance.js":"38","E:\\tsLib\\static\\src\\util\\ras.js":"39","E:\\tsLib\\static\\src\\util\\uploader.js":"40","E:\\tsLib\\static\\src\\util\\utilFunc.js":"41","E:\\tsLib\\static\\src\\util\\webWork.js":"42"},{"size":70,"mtime":1665480977698,"results":"43","hashOfConfig":"44"},{"size":4200,"mtime":1665480977718,"results":"45","hashOfConfig":"46"},{"size":1846,"mtime":1665480977718,"results":"47","hashOfConfig":"46"},{"size":519,"mtime":1665480977719,"results":"48","hashOfConfig":"46"},{"size":299,"mtime":1665480977720,"results":"49","hashOfConfig":"46"},{"size":1246,"mtime":1665480977720,"results":"50","hashOfConfig":"46"},{"size":3454,"mtime":1665480977720,"results":"51","hashOfConfig":"46"},{"size":69,"mtime":1665480977721,"results":"52","hashOfConfig":"46"},{"size":69,"mtime":1665480977722,"results":"53","hashOfConfig":"46"},{"size":2433,"mtime":1665480977723,"results":"54","hashOfConfig":"46"},{"size":174,"mtime":1665480977726,"results":"55","hashOfConfig":"46"},{"size":30742,"mtime":1665480977725,"results":"56","hashOfConfig":"46"},{"size":6346,"mtime":1665480977726,"results":"57","hashOfConfig":"46"},{"size":2693,"mtime":1665480977727,"results":"58","hashOfConfig":"46"},{"size":6917,"mtime":1665480977736,"results":"59","hashOfConfig":"46"},{"size":4726,"mtime":1665480977737,"results":"60","hashOfConfig":"46"},{"size":1338,"mtime":1665480977737,"results":"61","hashOfConfig":"46"},{"size":622,"mtime":1665480977739,"results":"62","hashOfConfig":"46"},{"size":102,"mtime":1665480977747,"results":"63","hashOfConfig":"46"},{"size":78,"mtime":1665567070649,"results":"64","hashOfConfig":"46"},{"size":97,"mtime":1665567070673,"results":"65","hashOfConfig":"46"},{"size":449,"mtime":1665480977748,"results":"66","hashOfConfig":"46"},{"size":352,"mtime":1665480977750,"results":"67","hashOfConfig":"46"},{"size":459,"mtime":1665480977750,"results":"68","hashOfConfig":"46"},{"size":8419,"mtime":1665480977751,"results":"69","hashOfConfig":"46"},{"size":0,"mtime":1665481353905,"results":"70","hashOfConfig":"46"},{"size":106,"mtime":1665480977740,"results":"71","hashOfConfig":"46"},{"size":1162,"mtime":1665556719895,"results":"72","hashOfConfig":"46"},{"size":389,"mtime":1665480977745,"results":"73","hashOfConfig":"46"},{"size":95,"mtime":1665480977746,"results":"74","hashOfConfig":"46"},{"size":545,"mtime":1665480977746,"results":"75","hashOfConfig":"46"},{"size":303,"mtime":1665480977742,"results":"76","hashOfConfig":"46"},{"size":23310,"mtime":1665480977743,"results":"77","hashOfConfig":"46"},{"size":2672,"mtime":1665480977744,"results":"78","hashOfConfig":"46"},{"size":366,"mtime":1665480977752,"results":"79","hashOfConfig":"46"},{"size":411,"mtime":1665480977753,"results":"80","hashOfConfig":"46"},{"size":112,"mtime":1665480977755,"results":"81","hashOfConfig":"46"},{"size":994,"mtime":1665480977757,"results":"82","hashOfConfig":"46"},{"size":489,"mtime":1665480977758,"results":"83","hashOfConfig":"46"},{"size":0,"mtime":1665480977758,"results":"84","hashOfConfig":"46"},{"size":164,"mtime":1665480977758,"results":"85","hashOfConfig":"46"},{"size":504,"mtime":1665480977759,"results":"86","hashOfConfig":"46"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wvmapo",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hr44my",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\tsLib\\commitlint.config.js",[],[],"E:\\tsLib\\static\\config\\env.js",[],[],"E:\\tsLib\\static\\config\\getHttpsConfig.js",[],[],"E:\\tsLib\\static\\config\\jest\\babelTransform.js",[],[],"E:\\tsLib\\static\\config\\jest\\cssTransform.js",[],[],"E:\\tsLib\\static\\config\\jest\\fileTransform.js",[],[],"E:\\tsLib\\static\\config\\modules.js",[],[],"E:\\tsLib\\static\\config\\my_config\\config_dev.js",[],[],"E:\\tsLib\\static\\config\\my_config\\config_prod.js",[],[],"E:\\tsLib\\static\\config\\paths.js",[],[],"E:\\tsLib\\static\\config\\webpack\\persistentCache\\createEnvironmentHash.js",[],[],"E:\\tsLib\\static\\config\\webpack.config.js",["217"],[],"const varConfig = require('../../var/static.config.json');\nconst config_dev = require('../config/my_config/config_dev');\nconst config_prod = require('../config/my_config/config_prod');\nconst fs = require('fs');\nconst path = require('path');\nconst webpack = require('webpack');\nconst resolve = require('resolve');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\nconst InlineChunkHtmlPlugin = require('react-dev-utils/InlineChunkHtmlPlugin');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\nconst { WebpackManifestPlugin } = require('webpack-manifest-plugin');\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\nconst WorkboxWebpackPlugin = require('workbox-webpack-plugin');\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\nconst getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\nconst ESLintPlugin = require('eslint-webpack-plugin');\nconst paths = require('./paths');\nconst modules = require('./modules');\nconst getClientEnvironment = require('./env');\nconst ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\nconst ForkTsCheckerWebpackPlugin =\n  process.env.TSC_COMPILE_ON_ERROR === 'true'\n    ? require('react-dev-utils/ForkTsCheckerWarningWebpackPlugin')\n    : require('react-dev-utils/ForkTsCheckerWebpackPlugin');\nconst ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin');\n\nconst createEnvironmentHash = require('./webpack/persistentCache/createEnvironmentHash');\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n\nconst reactRefreshRuntimeEntry = require.resolve('react-refresh/runtime');\nconst reactRefreshWebpackPluginRuntimeEntry = require.resolve(\n  '@pmmmwh/react-refresh-webpack-plugin'\n);\nconst babelRuntimeEntry = require.resolve('babel-preset-react-app');\nconst babelRuntimeEntryHelpers = require.resolve(\n  '@babel/runtime/helpers/esm/assertThisInitialized',\n  { paths: [babelRuntimeEntry] }\n);\nconst babelRuntimeRegenerator = require.resolve('@babel/runtime/regenerator', {\n  paths: [babelRuntimeEntry],\n});\n\n// Some apps do not need the benefits of saving a web request, so not inlining the chunk\n// makes for a smoother build process.\nconst shouldInlineRuntimeChunk = process.env.INLINE_RUNTIME_CHUNK !== 'false';\n\nconst emitErrorsAsWarnings = process.env.ESLINT_NO_DEV_ERRORS === 'true';\nconst disableESLintPlugin = process.env.DISABLE_ESLINT_PLUGIN === 'true';\n\nconst imageInlineSizeLimit = parseInt(\n  process.env.IMAGE_INLINE_SIZE_LIMIT || '10000'\n);\n\n// Check if TypeScript is setup\nconst useTypeScript = fs.existsSync(paths.appTsConfig);\n\n// Check if Tailwind config exists\nconst useTailwind = fs.existsSync(\n  path.join(paths.appPath, 'tailwind.config.js')\n);\n\n// Get the path to the uncompiled service worker (if it exists).\nconst swSrc = paths.swSrc;\n\n// style files regexes\nconst cssRegex = /\\.css$/;\nconst cssModuleRegex = /\\.module\\.css$/;\nconst sassRegex = /\\.(scss|sass)$/;\nconst sassModuleRegex = /\\.module\\.(scss|sass)$/;\n\nconst hasJsxRuntime = (() => {\n  if (process.env.DISABLE_NEW_JSX_TRANSFORM === 'true') {\n    return false;\n  }\n\n  try {\n    require.resolve('react/jsx-runtime');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\nmodule.exports = function (webpackEnv) {\n  console.log({ webpackEnv });\n  const isEnvDevelopment = webpackEnv === 'development';\n  const isEnvProduction = webpackEnv === 'production';\n\n  // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n  const isEnvProductionProfile =\n    isEnvProduction && process.argv.includes('--profile');\n\n  // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n  const env = getClientEnvironment(paths.publicUrlOrPath.slice(0, -1));\n\n  const shouldUseReactRefresh = env.raw.FAST_REFRESH;\n\n  // common function to get style loaders\n  const getStyleLoaders = (cssOptions, preProcessor) => {\n    const loaders = [\n      isEnvDevelopment && require.resolve('style-loader'),\n      isEnvProduction && {\n        loader: MiniCssExtractPlugin.loader,\n        // css is located in `static/css`, use '../../' to locate index.html folder\n        // in production `paths.publicUrlOrPath` can be a relative path\n        options: paths.publicUrlOrPath.startsWith('.')\n          ? { publicPath: '../../' }\n          : {},\n      },\n      {\n        loader: require.resolve('css-loader'),\n        options: cssOptions,\n      },\n      {\n        // Options for PostCSS as we reference these options twice\n        // Adds vendor prefixing based on your specified browser support in\n        // package.json\n        loader: require.resolve('postcss-loader'),\n        options: {\n          postcssOptions: {\n            // Necessary for external CSS imports to work\n            // https://github.com/facebook/create-react-app/issues/2677\n            ident: 'postcss',\n            config: false,\n            plugins: !useTailwind\n              ? [\n                  'postcss-flexbugs-fixes',\n                  [\n                    'postcss-preset-env',\n                    {\n                      autoprefixer: {\n                        flexbox: 'no-2009',\n                      },\n                      stage: 3,\n                    },\n                  ],\n                  // Adds PostCSS Normalize as the reset css with default options,\n                  // so that it honors browserslist config in package.json\n                  // which in turn let's users customize the target behavior as per their needs.\n                  'postcss-normalize',\n                ]\n              : [\n                  'tailwindcss',\n                  'postcss-flexbugs-fixes',\n                  [\n                    'postcss-preset-env',\n                    {\n                      autoprefixer: {\n                        flexbox: 'no-2009',\n                      },\n                      stage: 3,\n                    },\n                  ],\n                ],\n          },\n          sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n        },\n      },\n    ].filter(Boolean);\n    if (preProcessor) {\n      loaders.push(\n        {\n          loader: require.resolve('resolve-url-loader'),\n          options: {\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            root: paths.appSrc,\n          },\n        },\n        {\n          loader: require.resolve(preProcessor),\n          options: {\n            sourceMap: true,\n          },\n        }\n      );\n    }\n    return loaders;\n  };\n\n  return {\n    target: ['browserslist'],\n    // Webpack noise constrained to errors and warnings\n    stats: 'errors-warnings',\n    mode: isEnvProduction ? 'production' : isEnvDevelopment && 'development',\n    // Stop compilation early in production\n    bail: isEnvProduction,\n    devtool: isEnvProduction\n      ? shouldUseSourceMap\n        ? 'source-map'\n        : false\n      : isEnvDevelopment && 'cheap-module-source-map',\n    // These are the \"entry points\" to our application.\n    // This means they will be the \"root\" imports that are included in JS bundle.\n    entry: paths.appIndexJs,\n    output: {\n      // The build folder.\n      path: paths.appBuild,\n      // Add /* filename */ comments to generated require()s in the output.\n      pathinfo: isEnvDevelopment,\n      // There will be one main bundle, and one file per asynchronous chunk.\n      // In development, it does not produce real files.\n      filename: isEnvProduction\n        ? 'static/js/[name].js'\n        : isEnvDevelopment && 'static/js/bundle.js',\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: isEnvProduction\n        ? 'static/js/[name].chunk.js'\n        : isEnvDevelopment && 'static/js/[name].chunk.js',\n      assetModuleFilename: 'static/media/[name].[hash][ext]',\n      // webpack uses `publicPath` to determine where the app is being served from.\n      // It requires a trailing slash, or the file assets will get an incorrect path.\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\n      publicPath: paths.publicUrlOrPath,\n      // Point sourcemap entries to original disk location (format as URL on Windows)\n      devtoolModuleFilenameTemplate: isEnvProduction\n        ? (info) =>\n            path\n              .relative(paths.appSrc, info.absoluteResourcePath)\n              .replace(/\\\\/g, '/')\n        : isEnvDevelopment &&\n          ((info) =>\n            path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/')),\n    },\n    cache: {\n      type: 'filesystem',\n      version: createEnvironmentHash(env.raw),\n      cacheDirectory: paths.appWebpackCache,\n      store: 'pack',\n      buildDependencies: {\n        defaultWebpack: ['webpack/lib/'],\n        config: [__filename],\n        tsconfig: [paths.appTsConfig, paths.appJsConfig].filter((f) =>\n          fs.existsSync(f)\n        ),\n      },\n    },\n    infrastructureLogging: {\n      level: 'none',\n    },\n    optimization: {\n      minimize: isEnvProduction,\n      minimizer: [\n        // This is only used in production mode\n        new TerserPlugin({\n          terserOptions: {\n            parse: {\n              // We want terser to parse ecma 8 code. However, we don't want it\n              // to apply any minification steps that turns valid ecma 5 code\n              // into invalid ecma 5 code. This is why the 'compress' and 'output'\n              // sections only apply transformations that are ecma 5 safe\n              // https://github.com/facebook/create-react-app/pull/4234\n              ecma: 8,\n            },\n            compress: {\n              ecma: 5,\n              warnings: false,\n              // Disabled because of an issue with Uglify breaking seemingly valid code:\n              // https://github.com/facebook/create-react-app/issues/2376\n              // Pending further investigation:\n              // https://github.com/mishoo/UglifyJS2/issues/2011\n              comparisons: false,\n              // Disabled because of an issue with Terser breaking valid code:\n              // https://github.com/facebook/create-react-app/issues/5250\n              // Pending further investigation:\n              // https://github.com/terser-js/terser/issues/120\n              inline: 2,\n            },\n            mangle: {\n              safari10: true,\n            },\n            // Added for profiling in devtools\n            keep_classnames: isEnvProductionProfile,\n            keep_fnames: isEnvProductionProfile,\n            output: {\n              ecma: 5,\n              comments: false,\n              // Turned on because emoji and regex is not minified properly using default\n              // https://github.com/facebook/create-react-app/issues/2488\n              ascii_only: true,\n            },\n          },\n        }),\n        // This is only used in production mode\n        new CssMinimizerPlugin(),\n      ],\n    },\n    resolve: {\n      // This allows you to set a fallback for where webpack should look for modules.\n      // We placed these paths second because we want `node_modules` to \"win\"\n      // if there are any conflicts. This matches Node resolution mechanism.\n      // https://github.com/facebook/create-react-app/issues/253\n      modules: ['node_modules', paths.appNodeModules].concat(\n        modules.additionalModulePaths || []\n      ),\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: paths.moduleFileExtensions\n        .map((ext) => `.${ext}`)\n        .filter((ext) => useTypeScript || !ext.includes('ts')),\n      alias: {\n        // Support React Native Web\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n        'react-native': 'react-native-web',\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling',\n        }),\n        ...(modules.webpackAliases || {}),\n      },\n      plugins: [\n        // Prevents users from importing files from outside of src/ (or node_modules/).\n        // This often causes confusion because we only process files within src/ with babel.\n        // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n        // please link the files into your node_modules/ and let module-resolution kick in.\n        // Make sure your source files are compiled, as they will not be processed in any way.\n        new ModuleScopePlugin(paths.appSrc, [\n          paths.appPackageJson,\n          reactRefreshRuntimeEntry,\n          reactRefreshWebpackPluginRuntimeEntry,\n          babelRuntimeEntry,\n          babelRuntimeEntryHelpers,\n          babelRuntimeRegenerator,\n        ]),\n      ],\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [\n        // Handle node_modules packages that contain sourcemaps\n        shouldUseSourceMap && {\n          enforce: 'pre',\n          exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n          test: /\\.(js|mjs|jsx|ts|tsx|css)$/,\n          loader: require.resolve('source-map-loader'),\n        },\n        {\n          // \"oneOf\" will traverse all following loaders until one will\n          // match the requirements. When no loader matches it will fall\n          // back to the \"file\" loader at the end of the loader list.\n          oneOf: [\n            // TODO: Merge this config once `image/avif` is in the mime-db\n            // https://github.com/jshttp/mime-db\n            {\n              test: [/\\.avif$/],\n              type: 'asset',\n              mimetype: 'image/avif',\n              parser: {\n                dataUrlCondition: {\n                  maxSize: imageInlineSizeLimit,\n                },\n              },\n            },\n            // \"url\" loader works like \"file\" loader except that it embeds assets\n            // smaller than specified limit in bytes as data URLs to avoid requests.\n            // A missing `test` is equivalent to a match.\n            {\n              test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n              type: 'asset',\n              parser: {\n                dataUrlCondition: {\n                  maxSize: imageInlineSizeLimit,\n                },\n              },\n            },\n            {\n              test: /\\.svg$/,\n              use: [\n                {\n                  loader: require.resolve('@svgr/webpack'),\n                  options: {\n                    prettier: false,\n                    svgo: false,\n                    svgoConfig: {\n                      plugins: [{ removeViewBox: false }],\n                    },\n                    titleProp: true,\n                    ref: true,\n                  },\n                },\n                {\n                  loader: require.resolve('file-loader'),\n                  options: {\n                    name: 'static/media/[name].[hash].[ext]',\n                  },\n                },\n              ],\n              issuer: {\n                and: [/\\.(ts|tsx|js|jsx|md|mdx)$/],\n              },\n            },\n            // Process application JS with Babel.\n            // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n            {\n              test: /\\.(js|mjs|jsx|ts|tsx)$/,\n              include: paths.appSrc,\n              loader: require.resolve('babel-loader'),\n              options: {\n                customize: require.resolve(\n                  'babel-preset-react-app/webpack-overrides'\n                ),\n                presets: [\n                  [\n                    require.resolve('babel-preset-react-app'),\n                    {\n                      runtime: hasJsxRuntime ? 'automatic' : 'classic',\n                    },\n                  ],\n                ],\n\n                plugins: [\n                  isEnvDevelopment &&\n                    shouldUseReactRefresh &&\n                    require.resolve('react-refresh/babel'),\n                ].filter(Boolean),\n                // This is a feature of `babel-loader` for webpack (not Babel itself).\n                // It enables caching results in ./node_modules/.cache/babel-loader/\n                // directory for faster rebuilds.\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                compact: isEnvProduction,\n              },\n            },\n            // Process any JS outside of the app with Babel.\n            // Unlike the application JS, we only compile the standard ES features.\n            {\n              test: /\\.(js|mjs)$/,\n              exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                compact: false,\n                presets: [\n                  [\n                    require.resolve('babel-preset-react-app/dependencies'),\n                    { helpers: true },\n                  ],\n                ],\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n\n                // Babel sourcemaps are needed for debugging into node_modules\n                // code.  Without the options below, debuggers like VSCode\n                // show incorrect code and set breakpoints on the wrong lines.\n                sourceMaps: shouldUseSourceMap,\n                inputSourceMap: shouldUseSourceMap,\n              },\n            },\n            // \"postcss\" loader applies autoprefixer to our CSS.\n            // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n            // \"style\" loader turns CSS into JS modules that inject <style> tags.\n            // In production, we use MiniCSSExtractPlugin to extract that CSS\n            // to a file, but in development \"style\" loader enables hot editing\n            // of CSS.\n            // By default we support CSS Modules with the extension .module.css\n            {\n              test: cssRegex,\n              exclude: cssModuleRegex,\n              use: getStyleLoaders({\n                importLoaders: 1,\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n                modules: {\n                  mode: 'icss',\n                },\n              }),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n            // using the extension .module.css\n            {\n              test: cssModuleRegex,\n              use: getStyleLoaders({\n                importLoaders: 1,\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n                modules: {\n                  mode: 'local',\n                  getLocalIdent: getCSSModuleLocalIdent,\n                },\n              }),\n            },\n            // Opt-in support for SASS (using .scss or .sass extensions).\n            // By default we support SASS Modules with the\n            // extensions .module.scss or .module.sass\n            {\n              test: sassRegex,\n              exclude: sassModuleRegex,\n              use: getStyleLoaders(\n                {\n                  importLoaders: 3,\n                  sourceMap: isEnvProduction\n                    ? shouldUseSourceMap\n                    : isEnvDevelopment,\n                  modules: {\n                    mode: 'icss',\n                  },\n                },\n                'sass-loader'\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules, but using SASS\n            // using the extension .module.scss or .module.sass\n            {\n              test: sassModuleRegex,\n              use: getStyleLoaders(\n                {\n                  importLoaders: 3,\n                  sourceMap: isEnvProduction\n                    ? shouldUseSourceMap\n                    : isEnvDevelopment,\n                  modules: {\n                    mode: 'local',\n                    getLocalIdent: getCSSModuleLocalIdent,\n                  },\n                },\n                'sass-loader'\n              ),\n            },\n            // \"file\" loader makes sure those assets get served by WebpackDevServer.\n            // When you `import` an asset, you get its (virtual) filename.\n            // In production, they would get copied to the `build` folder.\n            // This loader doesn't use a \"test\" so it will catch all modules\n            // that fall through the other loaders.\n            {\n              // Exclude `js` files to keep \"css\" loader working as it injects\n              // its runtime that would otherwise be processed through \"file\" loader.\n              // Also exclude `html` and `json` extensions so they get processed\n              // by webpacks internal loaders.\n              exclude: [/^$/, /\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\n              type: 'asset/resource',\n            },\n            // ** STOP ** Are you adding a new loader?\n            // Make sure to add the new loader(s) before the \"file\" loader.\n          ],\n        },\n      ].filter(Boolean),\n    },\n    plugins: [\n      // Generates an `index.html` file with the <script> injected.\n      new HtmlWebpackPlugin({\n        inject: true,\n        template: paths.appHtml,\n        ...(isEnvProduction\n          ? {\n              minify: {\n                removeComments: true,\n                collapseWhitespace: true,\n                removeRedundantAttributes: true,\n                useShortDoctype: true,\n                removeEmptyAttributes: true,\n                removeStyleLinkTypeAttributes: true,\n                keepClosingSlash: true,\n                minifyJS: true,\n                minifyCSS: true,\n                minifyURLs: true,\n              },\n            }\n          : undefined),\n      }),\n      // Inlines the webpack runtime script. This script is too small to warrant\n      // a network request.\n      // https://github.com/facebook/create-react-app/issues/5358\n      isEnvProduction &&\n        shouldInlineRuntimeChunk &&\n        new InlineChunkHtmlPlugin(HtmlWebpackPlugin, [/runtime-.+[.]js/]),\n      // Makes some environment variables available in index.html.\n      // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n      // <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n      // It will be an empty string unless you specify \"homepage\"\n      // in `package.json`, in which case it will be the pathname of that URL.\n      new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw),\n      // This gives some necessary context to module not found errors, such as\n      // the requesting resource.\n      new ModuleNotFoundPlugin(paths.appPath),\n      // Makes some environment variables available to the JS code, for example:\n      // if (process.env.NODE_ENV === 'production') { ... }. See `./env.js`.\n      // It is absolutely essential that NODE_ENV is set to production\n      // during a production build.\n      // Otherwise React will be compiled in the very slow development mode.\n      // new webpack.DefinePlugin(),\n      // 注入全局变量\n      new webpack.DefinePlugin({\n        ...env.stringified,\n        SSO_LOCAL_CONFIG: isEnvDevelopment\n          ? JSON.stringify(config_dev.killConfig)\n          : JSON.stringify(config_prod.killConfig),\n      }),\n      // Experimental hot reloading for React .\n      // https://github.com/facebook/react/tree/main/packages/react-refresh\n      isEnvDevelopment &&\n        shouldUseReactRefresh &&\n        new ReactRefreshWebpackPlugin({\n          overlay: false,\n        }),\n      // Watcher doesn't work well if you mistype casing in a path so we use\n      // a plugin that prints an error when you attempt to do this.\n      // See https://github.com/facebook/create-react-app/issues/240\n      isEnvDevelopment && new CaseSensitivePathsPlugin(),\n      isEnvProduction &&\n        new MiniCssExtractPlugin({\n          // Options similar to the same options in webpackOptions.output\n          // both options are optional\n          filename: 'static/css/[name].[contenthash:8].css',\n          chunkFilename: 'static/css/[name].[contenthash:8].chunk.css',\n        }),\n      // Generate an asset manifest file with the following content:\n      // - \"files\" key: Mapping of all asset filenames to their corresponding\n      //   output file so that tools can pick it up without having to parse\n      //   `index.html`\n      // - \"entrypoints\" key: Array of files which are included in `index.html`,\n      //   can be used to reconstruct the HTML if necessary\n      new WebpackManifestPlugin({\n        fileName: 'asset-manifest.json',\n        publicPath: paths.publicUrlOrPath,\n        generate: (seed, files, entrypoints) => {\n          const manifestFiles = files.reduce((manifest, file) => {\n            manifest[file.name] = file.path;\n            return manifest;\n          }, seed);\n          const entrypointFiles = entrypoints.main.filter(\n            (fileName) => !fileName.endsWith('.map')\n          );\n\n          return {\n            files: manifestFiles,\n            entrypoints: entrypointFiles,\n          };\n        },\n      }),\n      // Moment.js is an extremely popular library that bundles large locale files\n      // by default due to how webpack interprets its code. This is a practical\n      // solution that requires the user to opt into importing specific locales.\n      // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n      // You can remove this if you don't use Moment.js:\n      new webpack.IgnorePlugin({\n        resourceRegExp: /^\\.\\/locale$/,\n        contextRegExp: /moment$/,\n      }),\n      // Generate a service worker script that will precache, and keep up to date,\n      // the HTML & assets that are part of the webpack build.\n      isEnvProduction &&\n        fs.existsSync(swSrc) &&\n        new WorkboxWebpackPlugin.InjectManifest({\n          swSrc,\n          dontCacheBustURLsMatching: /\\.[0-9a-f]{8}\\./,\n          exclude: [/\\.map$/, /asset-manifest\\.json$/, /LICENSE/],\n          // Bump up the default maximum size (2mb) that's precached,\n          // to make lazy-loading failure scenarios less likely.\n          // See https://github.com/cra-template/pwa/issues/13#issuecomment-722667270\n          maximumFileSizeToCacheInBytes: 5 * 1024 * 1024,\n        }),\n      // TypeScript type checking\n      useTypeScript &&\n        new ForkTsCheckerWebpackPlugin({\n          async: isEnvDevelopment,\n          typescript: {\n            typescriptPath: resolve.sync('typescript', {\n              basedir: paths.appNodeModules,\n            }),\n            configOverwrite: {\n              compilerOptions: {\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n                skipLibCheck: true,\n                inlineSourceMap: false,\n                declarationMap: false,\n                noEmit: true,\n                incremental: true,\n                tsBuildInfoFile: paths.appTsBuildInfoFile,\n              },\n            },\n            context: paths.appPath,\n            diagnosticOptions: {\n              syntactic: true,\n            },\n            mode: 'write-references',\n            // profile: true,\n          },\n          issue: {\n            // This one is specifically to match during CI tests,\n            // as micromatch doesn't match\n            // '../cra-template-typescript/template/src/App.tsx'\n            // otherwise.\n            include: [\n              { file: '../**/src/**/*.{ts,tsx}' },\n              { file: '**/src/**/*.{ts,tsx}' },\n            ],\n            exclude: [\n              { file: '**/src/**/__tests__/**' },\n              { file: '**/src/**/?(*.){spec|test}.*' },\n              { file: '**/src/setupProxy.*' },\n              { file: '**/src/setupTests.*' },\n            ],\n          },\n          logger: {\n            infrastructure: 'silent',\n          },\n        }),\n      !disableESLintPlugin &&\n        new ESLintPlugin({\n          // Plugin options\n          extensions: ['js', 'mjs', 'jsx', 'ts', 'tsx'],\n          formatter: require.resolve('react-dev-utils/eslintFormatter'),\n          eslintPath: require.resolve('eslint'),\n          failOnError: !(isEnvDevelopment && emitErrorsAsWarnings),\n          context: paths.appSrc,\n          cache: true,\n          cacheLocation: path.resolve(\n            paths.appNodeModules,\n            '.cache/.eslintcache'\n          ),\n          // ESLint class options\n          cwd: paths.appPath,\n          resolvePluginsRelativeTo: __dirname,\n          baseConfig: {\n            extends: [require.resolve('eslint-config-react-app/base')],\n            rules: {\n              ...(!hasJsxRuntime && {\n                'react/react-in-jsx-scope': 'error',\n              }),\n            },\n          },\n        }),\n    ].filter(Boolean),\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false,\n  };\n};\n","E:\\tsLib\\static\\config\\webpackDevServer.config.js",[],[],"E:\\tsLib\\static\\jest.config.js",[],[],"E:\\tsLib\\static\\scripts\\build.js",[],[],"E:\\tsLib\\static\\scripts\\start.js",[],[],"E:\\tsLib\\static\\scripts\\test.js",[],[],"E:\\tsLib\\static\\src\\App.js",[],[],"E:\\tsLib\\static\\src\\assets\\js\\config.js",[],["218"],"E:\\tsLib\\static\\src\\component\\jest\\Pick1\\sum.ts",[],[],"E:\\tsLib\\static\\src\\component\\jest\\Pick1\\sun.test.ts",[],[],"E:\\tsLib\\static\\src\\component\\learnReact\\context\\useContext\\index.tsx",[],[],"E:\\tsLib\\static\\src\\component\\learnReact\\context\\useContext\\son1\\index.tsx",[],[],"E:\\tsLib\\static\\src\\index.js",[],[],"E:\\tsLib\\static\\src\\lib.d.ts",[],["219","220"],"E:\\tsLib\\static\\src\\Page\\Echart\\index.tsx",[],[],"E:\\tsLib\\static\\src\\Page\\FIleExport\\index.jsx",[],[],"E:\\tsLib\\static\\src\\Page\\Iframe\\index.tsx",[],[],"E:\\tsLib\\static\\src\\Page\\learnReact\\index.tsx",[],[],"E:\\tsLib\\static\\src\\Page\\learnReact\\page\\context\\context.js",[],[],"E:\\tsLib\\static\\src\\Page\\learnReact\\page\\context\\index.tsx",["221"],[],"import React from 'react';\nimport { useState } from 'react';\nimport UsecontextA from '../../../../component/learnReact/context/useContext/index';\nimport { useContext1 } from '../context/context';\n\nconst Context = () => {\n  const [user, setUser] = useState<{\n    name: string;\n    age: number;\n  }>({\n    name: '张三',\n    age: 18,\n  });\n  console.log({ user });\n  return (\n    <div className=\"context\">\n      <useContext1.Provider value={user}>\n        <UsecontextA />\n      </useContext1.Provider>\n    </div>\n  );\n};\n\nexport default Context;\n","E:\\tsLib\\static\\src\\Page\\RSA\\index.tsx",[],[],"E:\\tsLib\\static\\src\\Page\\Uploader\\index.jsx",["222"],[],"import './index.css';\nimport React, { useRef, useState, useEffect } from 'react';\nimport SparkMD5 from 'spark-md5';\nimport instance from '../../util/instance';\nimport { createRandom } from '../../util/utilFunc';\n\nfunction Uploader() {\n  const upload_ipt = useRef();\n  const upload_ipt2 = useRef();\n  const upload_ipt3 = useRef();\n  const upload_ipt4 = useRef();\n  const upload_input5 = useRef();\n  const upload_list = useRef();\n  const upload_ipt6 = useRef();\n  const [maxFile, setMaxFile] = useState({\n    file: null,\n    progress: 0,\n  });\n  //   const dragBox = useRef();\n  const [dragFile, setDragFile] = useState({\n    styleBorder: '',\n  });\n  const [upload_tip, setTip] = useState('block');\n  // const [upload_list,setFileList] = useState(\"none\")\n  const [_file, setFile] = useState([]);\n  const [_file2, setFile2] = useState([]);\n  //   缩略图是否显示\n  const [abber, setabber] = useState({\n    imgSrc: '',\n    isShow: 'none',\n  });\n\n  //   多文件上传\n  const [files, setFiles] = useState([]);\n\n  const [progressONe, setPro] = useState({\n    isShowPro: 'none',\n    proLength: 0,\n  });\n\n  //  const [FileList,setFileList] = useState([]);\n  const handleDeleteList = (e) => {\n    const { target } = e;\n    // 事件委托, 提高页面性能\n    if (target.tagName === 'EM') {\n      // 点击的是移除按钮\n      setTip('block');\n      setFile([]);\n      // _file = null;\n    }\n  };\n\n  useEffect(() => {\n    console.log({ _file });\n    return () => {\n      console.log('组件卸载');\n    };\n  }, [_file]);\n\n  useEffect(() => {\n    console.log({ files });\n  }, [files]);\n\n  /**\n   *\n   * @param {} file\n   * @returns\n   * 根据内容生成hash名字\n   */\n  const changeBuffer = (file) => {\n    return new Promise((resolve) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = (e) => {\n        const buffer = e.target.result;\n        console.log(buffer);\n        const spark = new SparkMD5.ArrayBuffer();\n        spark.append(buffer);\n        const HASH = spark.end();\n        const suffix = /\\.([0-9a-zA-Z]+)$/.exec(file.name)[1];\n        console.log(HASH);\n        resolve({\n          buffer,\n          HASH,\n          suffix,\n          filename: `${HASH}.${suffix}`,\n        });\n      };\n    });\n  };\n  const handInputchange = () => {\n    // 获取用户选择的文件\n    const file = upload_ipt.current.files[0];\n    console.log({ file });\n    /**\n     * + name 文件名\n     * + size 文件大小 B字节\n     * + type 文件类型\n     */\n    if (!file) return;\n    // 方案1: 限制文件上传的格式\n    if (!/(png|jpg|jpeg)/i.test(file.type)) {\n      // eslint-disable-next-line no-alert\n      alert('上传文件格式不正确');\n    }\n    // 限制文件上传的大小\n    if (file.size > 2 * 1024 * 1024) {\n      alert('上传文件不能超过2MB');\n      return;\n    }\n    setTip('none');\n    setFile([file]);\n    // 事件委托,依托事件冒泡机制\n  };\n\n  const handeSend = () => {\n    console.log({ _file });\n    if (!_file) {\n      return alert('请上传文件');\n    }\n    const formData = new FormData();\n    for (const item in _file) {\n      console.log({ item });\n      formData.append('file', _file[item]);\n      formData.append('filename', _file[item].name);\n    }\n    console.log({ formData });\n    instance\n      .post('/upload/upload_single', formData)\n      .then((res) => {\n        const { code } = res;\n        if (code === 0) {\n          alert('file 上传成功');\n          return;\n        }\n        console.log(res);\n        return Promise.reject(res.codeText);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  //   base64的传输\n  const changeBase64 = (file) => {\n    return new Promise((resolve) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = (e) => {\n        resolve(e.target.result);\n      };\n    });\n  };\n  // 监听用户选择文件的操作\n  const handInputchange2 = async () => {\n    // 获取用户选择的文件\n\n    const file = upload_ipt2.current.files[0];\n    console.log({ file, upload_ipt2 });\n    let base64 = null;\n    /**\n     * + name 文件名\n     * + size 文件大小 B字节\n     * + type 文件类型\n     */\n    if (!file) return;\n    // 方案1: 限制文件上传的格式\n    if (!/(png|jpg|jpeg)/i.test(file.type)) {\n      alert('上传文件格式不正确');\n    }\n    // 限制文件上传的大小\n    if (file.size > 2 * 1024 * 1024) {\n      alert('上传文件不能超过2MB');\n      return;\n    }\n\n    // 将上传的文件转成base64\n    base64 = await changeBase64(file);\n    upload_ipt2.current.value = '';\n    console.log({ base64 });\n    try {\n      const data = await instance.post(\n        '/upload/upload_single_base64',\n        {\n          file: encodeURIComponent(base64), // 防止乱码问题\n          filename: file.name,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n\n      const { code } = data;\n      if (code === 0) {\n        alert('文件上传成功!');\n      }\n      throw data.codeText; // 抛出异常\n    } catch (e) {\n      // 文件上传错误\n    } finally {\n      //\n    }\n  };\n\n  //   缩略图上传\n  const handInputchange3 = async () => {\n    // 获取用户选择的文件\n    const file = upload_ipt3.current.files[0];\n    console.log({ file, upload_ipt3 });\n    /**\n     * + name 文件名\n     * + size 文件大小 B字节\n     * + type 文件类型\n     */\n    if (!file) return;\n    // 方案1: 限制文件上传的格式\n    if (!/(png|jpg|jpeg)/i.test(file.type)) {\n      alert('上传文件格式不正确');\n    }\n    // 限制文件上传的大小\n    if (file.size > 2 * 1024 * 1024) {\n      alert('上传文件不能超过2MB');\n      return;\n    }\n\n    // 文件预览,将文件对象转成base64赋值给img-url\n    const base64 = await changeBase64(file);\n    setFile2([file]);\n    console.log({ base64 });\n    setabber({\n      imgSrc: base64,\n      isShow: 'block',\n    });\n  };\n\n  const handeSend2 = async () => {\n    if (!_file2) return alert('请选择图片');\n    // 将文件传给服务器 FormData / base64\n    console.log('file2', _file2[0]);\n    // 生成文件buffer名字\n    const { filename } = await changeBuffer(_file2[0]);\n\n    const formData = new FormData();\n    formData.append('file', _file2[0]); // 处理名字,服务端不提供名字编译\n    formData.append('filename', filename); // 处理名字,服务端不提供名字编译\n    instance\n      .post('/upload/upload_single_name', formData)\n      .then((res) => {\n        const { code } = res;\n        if (+code === 0) {\n          alert('file 上传成功');\n          return;\n        }\n        console.log(res);\n        return Promise.reject(res.codeText);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const handleDown = () => {\n    console.log(111111111);\n    instance\n      .post('/download/file', 'hello')\n      .then((res) => {\n        const { code } = res;\n        if (+code === 0) {\n          console.log(res);\n          console.log(res.codeText);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // 进度条控制\n  const handInputchange4 = async () => {\n    console.log(upload_ipt4.current.files, '???');\n\n    const file = upload_ipt4.current.files[0];\n    /**\n     * + name 文件名\n     * + size 文件大小 B字节\n     * + type 文件类型\n     */\n    if (!file) return;\n    // 方案1: 限制文件上传的格式\n    if (!/(png|jpg|jpeg)/i.test(file.type)) {\n      alert('上传文件格式不正确');\n    }\n    // 限制文件上传的大小\n    if (file.size > 10 * 1024 * 1024) {\n      alert('上传文件不能超过2MB');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('filename', file.filename);\n      const data = await instance.post('/upload/upload_single', formData, {\n        onUploadProgress: (e) => {\n          console.log(e);\n          const { loaded, total } = e;\n          console.log(`${(loaded / total) * 100}%`, ' `${loaded/total*100}%`');\n          setPro({\n            isShowPro: 'block',\n            proLength: `${(loaded / total) * 100}`,\n          });\n        },\n      });\n      const { code } = data;\n      if (code === 0) {\n        setPro({\n          ...progressONe,\n          proLength: '100',\n        });\n      } else {\n        throw data.codeText;\n      }\n    } catch (e) {\n      //\n      console.log(e);\n      alert('文件上传失败');\n    } finally {\n      // this.value = '';\n    }\n  };\n\n  const handleChange5 = async () => {\n    // 获取用户选择的文件\n    console.log(upload_input5.current.files);\n    let files = Array.from(upload_input5.current.files);\n    console.log('files2222s', files);\n    files = files.map((file) => {\n      return {\n        file,\n        filename: file.name,\n        key: createRandom(),\n      };\n    });\n    console.log('filesss', files);\n    setFiles(files);\n  };\n\n  const deleteList = (e) => {\n    const { target } = e;\n    if (target.tagName === 'EM') {\n      console.log('okxxx');\n      const curli = target.parentNode.parentNode;\n      if (!curli) {\n        return;\n      }\n      console.log(curli);\n      const keyName = curli.getAttribute('keyName');\n      // upload_list.removeChild(curli); // 移除元素\n      console.log(keyName);\n      const newfiles = files.filter((item) => item.key !== keyName);\n      setFiles(newfiles);\n      // console.log(newfiles);\n    }\n  };\n\n  const handSend3 = async () => {\n    if (files.length === 0) {\n      return alert('请选择文件');\n    }\n    /**\n     *\n     * 循环发送请求\n     */\n    // const upload_list_arr = Array.from(upload_list.querySelectorAll('li'));\n    // console.log({upload_list_arr})\n    const _files = files.map((item) => {\n      const fm = new FormData();\n      // const curLi = upload_list_arr.find(\n      //     (liBox) => liBox.getAttribute('key') === item.key\n      // );\n      // const curSpan = curLi\n      //     ? curLi.querySelector('span:nth-last-child(1)')\n      //     : null;\n      fm.append('file', item.file);\n      fm.append('filename', item.filename);\n      return instance\n        .post('/upload/upload_single', fm, {\n          onUploadProgress(e) {\n            // 监听每一个上传进度\n            // const { loaded, total } = e;\n            // const progress = `${((loaded / total) * 100).toFixed(\n            //     2\n            // )}%`;\n            // if (curSpan) {\n            //     curSpan.innerText = progress;\n            // }\n          },\n        })\n        .then((data) => {\n          const { code } = data;\n          if (code === 0) {\n            // if (curSpan) {\n            //     curSpan.innerText = '100%';\n            // }\n            // return Promise.resolve(data);\n          } else {\n            return Promise.reject(data.codeText);\n          }\n        });\n    });\n    Promise.all(_files).then((res) => {\n      console.log(res);\n      alert('上传成功');\n    });\n  };\n\n  // 拖拽上传\n  const uploadFile = (file) => {\n    if (!file) return;\n    // 将文件传给服务器 FormData / base64\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('filename', file.name);\n    instance\n      .post('/upload/upload_single', formData)\n      .then((res) => {\n        const { code } = res;\n        if (code === 0) {\n          alert('file 上传成功');\n          // return;\n        } else {\n          console.log(res);\n          return Promise.reject(res.codeText);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const handleDragEnter = (e) => {\n    console.log(e);\n    console.log(1111);\n    e.preventDefault();\n    setDragFile({\n      styleBorder: '1px solid red',\n    });\n  };\n\n  const handeChange6 = (e) => {\n    const { files } = e.target;\n    const file = files[0];\n    console.log({ file });\n    setMaxFile({\n      ...maxFile,\n      file,\n    });\n    // _file = file;\n  };\n\n  // const createFileChunks = function (file, size = SIZE) {\n  //     let fileChunks = [];\n  //     for(let cur = 0; cur < file.size; cur += size){\n  //         fileChunks.push(file.slice(cur, cur + size));\n  //     }\n  //     return fileChunks;\n  // }\n\n  const handSend5 = async () => {\n    // 点击开始上传\n    const chunkList = [];\n    let alreadyChunkList = [];\n    console.log('maxFile.file', maxFile.file);\n    let maxSize = 1024 * 1024 * 10;\n    let maxCount = Math.ceil(maxFile.file.size / maxSize); // 最大允许分割的切片数量为30\n    let index = 0;\n    if (!maxFile.file) return alert('请先文件');\n    const { HASH, suffix } = await changeBuffer(maxFile.file);\n    // 先获取已经上传的切片\n    const data = await instance.post(\n      '/upload/upload_already',\n      {\n        HASH,\n      },\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      }\n    );\n    console.log({ data });\n    // 判断当前文件可以切出多少切片\n    if (maxCount > 100) {\n      // 如果切片数量大于最大值\n      maxSize = maxFile.file.size / 100; // 则改变切片大小\n      maxCount = 100;\n    }\n    console.log(maxCount, 'maxCount');\n    console.log(maxSize, 'maxSize');\n    while (index < maxCount) {\n      chunkList.push({\n        file: maxFile.file.slice(index * maxSize, (index + 1) * maxSize),\n        filename: `${HASH}_${index + 1}.${suffix}`,\n      });\n      index++;\n    }\n    index = 0;\n\n    const complate = async () => {\n      index++;\n      const progress = `(${index}/${maxCount}*100)%`; // 进度条\n      setMaxFile({\n        ...maxFile,\n        progress,\n      });\n      console.log({ index });\n      if (index >= maxCount) {\n        console.log('ok, 切片完成');\n        try {\n          const res = await instance.post(\n            '/upload/upload_merge',\n            {\n              HASH,\n              count: maxCount,\n            },\n            {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            }\n          );\n          if (+res.code === 0) {\n            console.log(`你可以通过改路径${res.url}访问文件`);\n          } else {\n            alert('合并切片失败');\n            clear();\n          }\n        } catch (err) {\n          console.log({ err });\n        }\n      }\n    };\n\n    const clear = () => {};\n\n    const { fileList } = data;\n    alreadyChunkList = fileList;\n    console.log(chunkList, 'chunkList');\n    chunkList.forEach((item) => {\n      // 已经上传了无需上传\n      if (\n        alreadyChunkList.length > 0 &&\n        alreadyChunkList.includes(item.filename)\n      ) {\n        // 表示切片已经存在\n        complate();\n        return;\n      }\n      const fm = new FormData();\n      fm.append('file', item.file);\n      fm.append('filename', item.filename);\n      // return new Promise((sovle) => {\n      instance\n        .post('/upload/upload_chunk', fm)\n        .then((res) => {\n          if (+res.code === 0) {\n            complate();\n          }\n        })\n        .catch(() => {\n          console.log('当前切片上传失败');\n        });\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"item\">\n        <button\n          onClick={() => {\n            handleDown();\n          }}\n        >\n          测试download接口\n        </button>\n      </div>\n      <div className=\"item\">\n        <div className=\"title\">单一文件上传FORM_DATA</div>\n        <section id=\"upload1\">\n          <input\n            type=\"file\"\n            accept=\".png,.jpg\"\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n            ref={upload_ipt}\n            onChange={handInputchange}\n          />\n          {/* <!-- 自己文件的按钮,来触发选择图片 --> */}\n          <div>\n            <button\n              className=\"upload_button select\"\n              onClick={() => {\n                console.log('上传文件', upload_ipt.current.files);\n                upload_ipt.current.click();\n              }}\n            >\n              选择文件\n            </button>\n            <button className=\"upload_button upload\" onClick={handeSend}>\n              上传到服务器\n            </button>\n          </div>\n          <div className=\"upload_tip\" style={{ display: upload_tip }}>\n            大小不能超过2MB\n          </div>\n          <ul\n            className=\"upload_list\"\n            onClick={(e) => {\n              handleDeleteList(e);\n            }}\n          >\n            {_file !== [] &&\n              _file.map((item) => {\n                return (\n                  <li key={item.name}>\n                    <span>文件: {item.name}</span>\n                    <span>\n                      <em>移除</em>\n                    </span>\n                  </li>\n                );\n              })}\n          </ul>\n        </section>\n      </div>\n      <div className=\"item\">\n        <h3>单一文件上传 [BASE64]</h3>\n        <section id=\"upload2\">\n          <input\n            type=\"file\"\n            accept=\".png,.jpg\"\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n            onChange={handInputchange2}\n            ref={upload_ipt2}\n          />\n          <div>\n            <button\n              className=\"upload_button select\"\n              onClick={() => {\n                upload_ipt2.current.click();\n              }}\n            >\n              选择图片上传\n            </button>\n          </div>\n        </section>\n      </div>\n\n      <div className=\"item\">\n        <h3>单一文件上传 [缩略图]</h3>\n        <section id=\"upload3\">\n          <input\n            type=\"file\"\n            accept=\".png,.jpg\"\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n            ref={upload_ipt3}\n            onChange={handInputchange3}\n          />\n          <div>\n            <button\n              className=\"upload_button select\"\n              onClick={() => {\n                upload_ipt3.current.click();\n              }}\n            >\n              选择文件\n            </button>\n            <button className=\"upload_button upload\" onClick={handeSend2}>\n              上传到服务器\n            </button>\n          </div>\n          <div className=\"upload_abber\">\n            <img\n              src={abber.imgSrc}\n              alt=\"\"\n              style={{\n                width: '100px',\n                height: '100px',\n                display: abber.isShow,\n              }}\n            />\n          </div>\n        </section>\n      </div>\n\n      <div className=\"item\">\n        <h3>单一文件上传 [进度条管控]</h3>\n        <section id=\"upload4\">\n          <input\n            type=\"file\"\n            accept=\".png,.jpg\"\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n            ref={upload_ipt4}\n            onChange={handInputchange4}\n          />\n          <div>\n            <button\n              className=\"upload_button select\"\n              onClick={() => {\n                upload_ipt4.current.click();\n              }}\n            >\n              选择文件\n            </button>\n          </div>\n          <div\n            className=\"upload_progress\"\n            style={{ display: progressONe.isShowPro }}\n          >\n            <div\n              className=\"progress\"\n              style={{\n                width: `${progressONe.proLength}%`,\n              }}\n            />\n          </div>\n        </section>\n      </div>\n\n      <div className=\"item\">\n        <h3>多文件上传 [FORM-DATA]</h3>\n        <section id=\"upload5\">\n          <input\n            type=\"file\"\n            accept=\".png,.jpg\"\n            multiple={true}\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n            onChange={handleChange5}\n            ref={upload_input5}\n          />\n          <div>\n            <button\n              className=\"upload_button select\"\n              onClick={() => {\n                upload_input5.current.click();\n              }}\n            >\n              选择文件\n            </button>\n            <button\n              className=\"upload_button upload\"\n              onClick={() => {\n                handSend3();\n              }}\n            >\n              上传到服务器\n            </button>\n          </div>\n          <ul\n            className=\"upload_list\"\n            onClick={(e) => {\n              deleteList(e);\n            }}\n            ref={upload_list}\n          >\n            {files.map((item, index) => {\n              console.log({ item });\n              return (\n                <li key={item.key} keyName={item.key}>\n                  <span>\n                    ${index + 1} : ${item.filename}\n                  </span>\n                  <span>\n                    <em>删除</em>\n                  </span>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      </div>\n\n      <div\n        className=\"item\"\n        id=\"dragBox\"\n        style={{\n          border: dragFile.styleBorder,\n        }}\n        onDragOver={(e) => {\n          console.log(2222);\n          e.preventDefault();\n        }}\n        onDragEnter={handleDragEnter}\n        //  onDragLeave = {(e)=>{\n        //     console.log(2222)\n        //  }}\n        onDrop={(e) => {\n          e.preventDefault();\n          setDragFile({\n            styleBorder: '',\n          });\n          const {\n            dataTransfer: { files },\n          } = e;\n          const file = files[0];\n          console.log({ file });\n          uploadFile(file);\n        }}\n      >\n        <h3>拖拽上传 [FORM-DATA]</h3>\n        <section id=\"upload6\">\n          <input\n            type=\"file\"\n            accept=\".png,.jpg\"\n            multiple={true}\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n          />\n          <div className=\"upload-box\">\n            <span>将文件拖到此处,或</span>\n            <span\n              id=\"upload-button\"\n              style={{ color: 'rgb(58, 58, 193)', cursor: 'pointer' }}\n            >\n              点击上传\n            </span>\n          </div>\n        </section>\n      </div>\n\n      <div className=\"item\">\n        <section id=\"upload7\">\n          <h3>大文件上传 [FORM-DATA]</h3>\n          <input\n            type=\"file\"\n            className=\"upload_ipt\"\n            style={{ display: 'none' }}\n            ref={upload_ipt6}\n            onChange={handeChange6}\n          />\n          <div>\n            <button\n              className=\"upload_button select\"\n              onClick={() => {\n                upload_ipt6.current.click();\n              }}\n            >\n              选择文件\n            </button>\n            <button className=\"upload_button upload\" onClick={handSend5}>\n              开始上传\n            </button>\n          </div>\n          <div className=\"upload_progress\">\n            <div\n              className=\"progress\"\n              style={{\n                width: `${maxFile.progress}%`,\n              }}\n            />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Uploader;\n","E:\\tsLib\\static\\src\\Page\\YuexiuAuth\\index.tsx",[],[],"E:\\tsLib\\static\\src\\util\\api\\wechatAuth.js",[],[],"E:\\tsLib\\static\\src\\util\\deepCopy.js",["223"],[],"const deepcopy = (obj) => {\n  let newobj = null;\n  if (isObject(obj)) {\n    newobj = Array.isArray(obj) ? [] : {};\n    for (let i in obj) {\n      newobj[i] = isObject(obj[i]) ? deepcopy(obj[i]) : obj[i];\n    }\n  } else {\n    newobj = isObject;\n  }\n  return newobj;\n};\n\n// 判断obj是不是对象\nconst isObject = (obj) => {\n  return typeof obj === 'object' && typeof obj !== null;\n};\n\nexport default deepcopy;\n","E:\\tsLib\\static\\src\\util\\histroy.js",[],[],"E:\\tsLib\\static\\src\\util\\instance.js",[],[],"E:\\tsLib\\static\\src\\util\\ras.js",[],[],"E:\\tsLib\\static\\src\\util\\uploader.js",[],[],"E:\\tsLib\\static\\src\\util\\utilFunc.js",[],[],"E:\\tsLib\\static\\src\\util\\webWork.js",[],[],{"ruleId":"224","severity":1,"message":"225","line":1,"column":7,"nodeType":"226","messageId":"227","endLine":1,"endColumn":16},{"ruleId":"228","severity":2,"message":"229","line":2,"column":32,"nodeType":"226","messageId":"230","endLine":2,"endColumn":48,"suppressions":"231"},{"ruleId":"232","severity":1,"message":"233","line":248,"column":11,"nodeType":"226","messageId":"227","endLine":248,"endColumn":14,"suppressions":"234"},{"ruleId":"232","severity":1,"message":"235","line":250,"column":13,"nodeType":"226","messageId":"227","endLine":250,"endColumn":30,"suppressions":"236"},{"ruleId":"232","severity":1,"message":"237","line":7,"column":16,"nodeType":"226","messageId":"227","endLine":7,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":309,"column":53,"nodeType":"240","messageId":"241","endLine":309,"endColumn":78},{"ruleId":"242","severity":1,"message":"243","line":16,"column":52,"nodeType":"240","messageId":"244","endLine":16,"endColumn":56},"no-unused-vars","'varConfig' is assigned a value but never used.","Identifier","unusedVar","no-undef","'SSO_LOCAL_CONFIG' is not defined.","undef",["245"],"@typescript-eslint/no-unused-vars","'JSX' is defined but never used.",["246"],"'IntrinsicElements' is defined but never used.",["247"],"'setUser' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","valid-typeof","Invalid typeof comparison value.","invalidValue",{"kind":"248","justification":"249"},{"kind":"248","justification":"249"},{"kind":"248","justification":"249"},"directive",""]